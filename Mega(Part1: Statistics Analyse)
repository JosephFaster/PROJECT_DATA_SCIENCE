{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/josephfaster/statistical-analysis-megaline?scriptVersionId=150214212\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"b3e1fba9","metadata":{"papermill":{"duration":0.023202,"end_time":"2023-11-11T03:54:34.470329","exception":false,"start_time":"2023-11-11T03:54:34.447127","status":"completed"},"tags":[]},"source":["# Statistical analysis"]},{"cell_type":"markdown","id":"3e1201c0","metadata":{"papermill":{"duration":0.022441,"end_time":"2023-11-11T03:54:34.516313","exception":false,"start_time":"2023-11-11T03:54:34.493872","status":"completed"},"tags":[]},"source":["**Megaline**\n","\n","**Description**\n","We are going to do an analysis of the telecommunications company Megaline.\n","\n","**This project has two parts: A statistical analysis and a more in-depth one with machine learning, which seeks to improve the company's decision making.**\n","\n","The company offers its clients two prepaid rates, Surf and Ultimate. The commercial department wants to know which of the plans generates the most income in order to adjust the advertising budget.\n","\n","We are going to perform a preliminary analysis of rates based on a relatively small selection of customers. With the data of 500 Megaline customers I am going to answer: who the customers are, where they are from, what rate they use, as well as the number of calls they made and the text messages they sent in 2018. The work is based on analyzing the customer behavior and determine which prepaid rate generates the most revenue."]},{"cell_type":"markdown","id":"c883a0ac","metadata":{"papermill":{"duration":0.022701,"end_time":"2023-11-11T03:54:34.56128","exception":false,"start_time":"2023-11-11T03:54:34.538579","status":"completed"},"tags":[]},"source":["## Load libraries for analysis"]},{"cell_type":"code","execution_count":1,"id":"a6f8d80c","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:34.610559Z","iopub.status.busy":"2023-11-11T03:54:34.60965Z","iopub.status.idle":"2023-11-11T03:54:37.385535Z","shell.execute_reply":"2023-11-11T03:54:37.384005Z"},"papermill":{"duration":2.804034,"end_time":"2023-11-11T03:54:37.388555","exception":false,"start_time":"2023-11-11T03:54:34.584521","status":"completed"},"tags":[]},"outputs":[],"source":["# Load all libraries\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from scipy import stats"]},{"cell_type":"markdown","id":"f645ba39","metadata":{"papermill":{"duration":0.022243,"end_time":"2023-11-11T03:54:37.433541","exception":false,"start_time":"2023-11-11T03:54:37.411298","status":"completed"},"tags":[]},"source":["## Load the data"]},{"cell_type":"code","execution_count":2,"id":"8c3b51f7","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:37.482914Z","iopub.status.busy":"2023-11-11T03:54:37.481424Z","iopub.status.idle":"2023-11-11T03:54:38.018072Z","shell.execute_reply":"2023-11-11T03:54:38.016866Z"},"papermill":{"duration":0.563442,"end_time":"2023-11-11T03:54:38.020674","exception":false,"start_time":"2023-11-11T03:54:37.457232","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>user_id</th>\n","      <th>call_date</th>\n","      <th>duration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000_93</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>8.52</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000_145</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>13.66</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000_247</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>14.48</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000_309</td>\n","      <td>1000</td>\n","      <td>2018-12-28</td>\n","      <td>5.76</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000_380</td>\n","      <td>1000</td>\n","      <td>2018-12-30</td>\n","      <td>4.22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         id  user_id   call_date  duration\n","0   1000_93     1000  2018-12-27      8.52\n","1  1000_145     1000  2018-12-27     13.66\n","2  1000_247     1000  2018-12-27     14.48\n","3  1000_309     1000  2018-12-28      5.76\n","4  1000_380     1000  2018-12-30      4.22"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>user_id</th>\n","      <th>session_date</th>\n","      <th>mb_used</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000_13</td>\n","      <td>1000</td>\n","      <td>2018-12-29</td>\n","      <td>89.86</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000_204</td>\n","      <td>1000</td>\n","      <td>2018-12-31</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000_379</td>\n","      <td>1000</td>\n","      <td>2018-12-28</td>\n","      <td>660.40</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000_413</td>\n","      <td>1000</td>\n","      <td>2018-12-26</td>\n","      <td>270.99</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000_442</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>880.22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         id  user_id session_date  mb_used\n","0   1000_13     1000   2018-12-29    89.86\n","1  1000_204     1000   2018-12-31     0.00\n","2  1000_379     1000   2018-12-28   660.40\n","3  1000_413     1000   2018-12-26   270.99\n","4  1000_442     1000   2018-12-27   880.22"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>user_id</th>\n","      <th>message_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000_125</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000_160</td>\n","      <td>1000</td>\n","      <td>2018-12-31</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000_223</td>\n","      <td>1000</td>\n","      <td>2018-12-31</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000_251</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000_255</td>\n","      <td>1000</td>\n","      <td>2018-12-26</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         id  user_id message_date\n","0  1000_125     1000   2018-12-27\n","1  1000_160     1000   2018-12-31\n","2  1000_223     1000   2018-12-31\n","3  1000_251     1000   2018-12-27\n","4  1000_255     1000   2018-12-26"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>messages_included</th>\n","      <th>mb_per_month_included</th>\n","      <th>minutes_included</th>\n","      <th>usd_monthly_pay</th>\n","      <th>usd_per_gb</th>\n","      <th>usd_per_message</th>\n","      <th>usd_per_minute</th>\n","      <th>plan_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50</td>\n","      <td>15360</td>\n","      <td>500</td>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>0.03</td>\n","      <td>0.03</td>\n","      <td>surf</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000</td>\n","      <td>30720</td>\n","      <td>3000</td>\n","      <td>70</td>\n","      <td>7</td>\n","      <td>0.01</td>\n","      <td>0.01</td>\n","      <td>ultimate</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   messages_included  mb_per_month_included  minutes_included  \\\n","0                 50                  15360               500   \n","1               1000                  30720              3000   \n","\n","   usd_monthly_pay  usd_per_gb  usd_per_message  usd_per_minute plan_name  \n","0               20          10             0.03            0.03      surf  \n","1               70           7             0.01            0.01  ultimate  "]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>first_name</th>\n","      <th>last_name</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>reg_date</th>\n","      <th>plan</th>\n","      <th>churn_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>Anamaria</td>\n","      <td>Bauer</td>\n","      <td>45</td>\n","      <td>Atlanta-Sandy Springs-Roswell, GA MSA</td>\n","      <td>2018-12-24</td>\n","      <td>ultimate</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>Mickey</td>\n","      <td>Wilkerson</td>\n","      <td>28</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-08-13</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1002</td>\n","      <td>Carlee</td>\n","      <td>Hoffman</td>\n","      <td>36</td>\n","      <td>Las Vegas-Henderson-Paradise, NV MSA</td>\n","      <td>2018-10-21</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1003</td>\n","      <td>Reynaldo</td>\n","      <td>Jenkins</td>\n","      <td>52</td>\n","      <td>Tulsa, OK MSA</td>\n","      <td>2018-01-28</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1004</td>\n","      <td>Leonila</td>\n","      <td>Thompson</td>\n","      <td>40</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-05-23</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id first_name  last_name  age                                   city  \\\n","0     1000   Anamaria      Bauer   45  Atlanta-Sandy Springs-Roswell, GA MSA   \n","1     1001     Mickey  Wilkerson   28        Seattle-Tacoma-Bellevue, WA MSA   \n","2     1002     Carlee    Hoffman   36   Las Vegas-Henderson-Paradise, NV MSA   \n","3     1003   Reynaldo    Jenkins   52                          Tulsa, OK MSA   \n","4     1004    Leonila   Thompson   40        Seattle-Tacoma-Bellevue, WA MSA   \n","\n","     reg_date      plan churn_date  \n","0  2018-12-24  ultimate        NaN  \n","1  2018-08-13      surf        NaN  \n","2  2018-10-21      surf        NaN  \n","3  2018-01-28      surf        NaN  \n","4  2018-05-23      surf        NaN  "]},"metadata":{},"output_type":"display_data"}],"source":["# Load the data files into different DataFrames\n","calls = pd.read_csv('/kaggle/input/megalinecompany/megaline_calls.csv')\n","internet = pd.read_csv('/kaggle/input/megalinecompany/megaline_internet.csv')\n","messages = pd.read_csv('/kaggle/input/megalinecompany/megaline_messages.csv')\n","plans = pd.read_csv('/kaggle/input/megalinecompany/megaline_plans.csv')\n","users = pd.read_csv('/kaggle/input/megalinecompany/megaline_users.csv')\n","\n","# Verify successful loading of data by displaying the first rows of each DataFrame\n","display(calls.head())\n","display(internet.head())\n","display(messages.head())\n","display(plans.head())\n","display(users.head())\n"]},{"cell_type":"markdown","id":"6afc79f7","metadata":{"papermill":{"duration":0.023433,"end_time":"2023-11-11T03:54:38.067852","exception":false,"start_time":"2023-11-11T03:54:38.044419","status":"completed"},"tags":[]},"source":["## Prepare the data"]},{"cell_type":"markdown","id":"e3c4cdbd","metadata":{"papermill":{"duration":0.024177,"end_time":"2023-11-11T03:54:38.115633","exception":false,"start_time":"2023-11-11T03:54:38.091456","status":"completed"},"tags":[]},"source":["### Plans"]},{"cell_type":"code","execution_count":3,"id":"ce2e44ab","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:38.228065Z","iopub.status.busy":"2023-11-11T03:54:38.227607Z","iopub.status.idle":"2023-11-11T03:54:38.259392Z","shell.execute_reply":"2023-11-11T03:54:38.258282Z"},"papermill":{"duration":0.122683,"end_time":"2023-11-11T03:54:38.261853","exception":false,"start_time":"2023-11-11T03:54:38.13917","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2 entries, 0 to 1\n","Data columns (total 8 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   messages_included      2 non-null      int64  \n"," 1   mb_per_month_included  2 non-null      int64  \n"," 2   minutes_included       2 non-null      int64  \n"," 3   usd_monthly_pay        2 non-null      int64  \n"," 4   usd_per_gb             2 non-null      int64  \n"," 5   usd_per_message        2 non-null      float64\n"," 6   usd_per_minute         2 non-null      float64\n"," 7   plan_name              2 non-null      object \n","dtypes: float64(2), int64(5), object(1)\n","memory usage: 256.0+ bytes\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"}],"source":["# Print the general information/summary about the plans DataFrame\n","display(plans.info())\n"]},{"cell_type":"markdown","id":"91179bcd","metadata":{"papermill":{"duration":0.023915,"end_time":"2023-11-11T03:54:38.31004","exception":false,"start_time":"2023-11-11T03:54:38.286125","status":"completed"},"tags":[]},"source":["**General description:**\n","1. The DataFrame `plans` has 2 rows and 8 columns.\n","2. All columns have 2 non-null entries, which means there are no missing values in this DataFrame.\n","3. The columns have the following data types:\n","    - 5 columns with integer data (`int64`): `messages_included`, `mb_per_month_included`, `minutes_included`, `usd_monthly_pay`, and `usd_per_gb`.\n","    - 2 columns with floating point data (`float64`): `usd_per_message` and `usd_per_minute`.\n","    - 1 column with object type data (usually text strings): `plan_name`."]},{"cell_type":"code","execution_count":4,"id":"7d22c2e2","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:38.361024Z","iopub.status.busy":"2023-11-11T03:54:38.360615Z","iopub.status.idle":"2023-11-11T03:54:38.374594Z","shell.execute_reply":"2023-11-11T03:54:38.373635Z"},"papermill":{"duration":0.041569,"end_time":"2023-11-11T03:54:38.376963","exception":false,"start_time":"2023-11-11T03:54:38.335394","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>messages_included</th>\n","      <th>mb_per_month_included</th>\n","      <th>minutes_included</th>\n","      <th>usd_monthly_pay</th>\n","      <th>usd_per_gb</th>\n","      <th>usd_per_message</th>\n","      <th>usd_per_minute</th>\n","      <th>plan_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50</td>\n","      <td>15360</td>\n","      <td>500</td>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>0.03</td>\n","      <td>0.03</td>\n","      <td>surf</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000</td>\n","      <td>30720</td>\n","      <td>3000</td>\n","      <td>70</td>\n","      <td>7</td>\n","      <td>0.01</td>\n","      <td>0.01</td>\n","      <td>ultimate</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   messages_included  mb_per_month_included  minutes_included  \\\n","0                 50                  15360               500   \n","1               1000                  30720              3000   \n","\n","   usd_monthly_pay  usd_per_gb  usd_per_message  usd_per_minute plan_name  \n","0               20          10             0.03            0.03      surf  \n","1               70           7             0.01            0.01  ultimate  "]},"metadata":{},"output_type":"display_data"}],"source":["# Print a sample of the data for the plans\n","display(plans)"]},{"cell_type":"markdown","id":"952bc024","metadata":{"papermill":{"duration":0.024052,"end_time":"2023-11-11T03:54:38.42663","exception":false,"start_time":"2023-11-11T03:54:38.402578","status":"completed"},"tags":[]},"source":["**Sample Data:**\n","- There are two plans available: \"surf\" and \"ultimate\".\n","- The \"surf\" plan offers:\n","   - 50 messages included.\n","   - 15,360 MB (approximately 15 GB) of data per month.\n","   - 500 minutes included.\n","   - A monthly payment of $20.\n","   - A cost of $10 per additional GB.\n","   - A cost of $0.03 per additional message.\n","   - A cost of $0.03 per additional minute.\n","  \n","- The \"ultimate\" plan offers:\n","   - 1,000 messages included.\n","   - 30,720 MB (approximately 30 GB) of data per month.\n","   - 3,000 minutes included.\n","   - A monthly payment of $70.\n","   - A cost of $7 per additional GB.\n","   - A cost of $0.01 per additional message.\n","   - A cost of $0.01 per additional minute.\n","\n","**Possible problems and solutions:**\n","1. **Data Types**: At first glance, the data types seem appropriate for each column. Amounts are in numeric formats and plan names are in string format.\n","2. **Missing Data**: There is no missing data in this DataFrame, which is ideal.\n","3. **Consistency in Units**: We could consider converting `mb_per_month_included` to GB for a more intuitive interpretation, since the additional costs are in terms of GB (`usd_per_gb`). However, this is more of a suggestion than an actual problem.\n","\n","Overall, the DataFrame appears to be in good condition and does not require immediate changes, unless you want to improve the interpretation in terms of the units used."]},{"cell_type":"markdown","id":"a78c1be2","metadata":{"papermill":{"duration":0.024928,"end_time":"2023-11-11T03:54:38.475696","exception":false,"start_time":"2023-11-11T03:54:38.450768","status":"completed"},"tags":[]},"source":["### Users"]},{"cell_type":"code","execution_count":5,"id":"25cf4c89","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:38.526549Z","iopub.status.busy":"2023-11-11T03:54:38.526149Z","iopub.status.idle":"2023-11-11T03:54:38.538303Z","shell.execute_reply":"2023-11-11T03:54:38.537334Z"},"papermill":{"duration":0.041088,"end_time":"2023-11-11T03:54:38.541111","exception":false,"start_time":"2023-11-11T03:54:38.500023","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 500 entries, 0 to 499\n","Data columns (total 8 columns):\n"," #   Column      Non-Null Count  Dtype \n","---  ------      --------------  ----- \n"," 0   user_id     500 non-null    int64 \n"," 1   first_name  500 non-null    object\n"," 2   last_name   500 non-null    object\n"," 3   age         500 non-null    int64 \n"," 4   city        500 non-null    object\n"," 5   reg_date    500 non-null    object\n"," 6   plan        500 non-null    object\n"," 7   churn_date  34 non-null     object\n","dtypes: int64(2), object(6)\n","memory usage: 31.4+ KB\n","None\n"]}],"source":["# Prints the general information/summary about the users DataFrame\n","print(users.info())\n"]},{"cell_type":"code","execution_count":6,"id":"8f2ff0de","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:38.591592Z","iopub.status.busy":"2023-11-11T03:54:38.591152Z","iopub.status.idle":"2023-11-11T03:54:38.614561Z","shell.execute_reply":"2023-11-11T03:54:38.613364Z"},"papermill":{"duration":0.051415,"end_time":"2023-11-11T03:54:38.616914","exception":false,"start_time":"2023-11-11T03:54:38.565499","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>first_name</th>\n","      <th>last_name</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>reg_date</th>\n","      <th>plan</th>\n","      <th>churn_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>Anamaria</td>\n","      <td>Bauer</td>\n","      <td>45</td>\n","      <td>Atlanta-Sandy Springs-Roswell, GA MSA</td>\n","      <td>2018-12-24</td>\n","      <td>ultimate</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>Mickey</td>\n","      <td>Wilkerson</td>\n","      <td>28</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-08-13</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1002</td>\n","      <td>Carlee</td>\n","      <td>Hoffman</td>\n","      <td>36</td>\n","      <td>Las Vegas-Henderson-Paradise, NV MSA</td>\n","      <td>2018-10-21</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1003</td>\n","      <td>Reynaldo</td>\n","      <td>Jenkins</td>\n","      <td>52</td>\n","      <td>Tulsa, OK MSA</td>\n","      <td>2018-01-28</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1004</td>\n","      <td>Leonila</td>\n","      <td>Thompson</td>\n","      <td>40</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-05-23</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>495</th>\n","      <td>1495</td>\n","      <td>Fidel</td>\n","      <td>Sharpe</td>\n","      <td>67</td>\n","      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n","      <td>2018-09-04</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>496</th>\n","      <td>1496</td>\n","      <td>Ariel</td>\n","      <td>Shepherd</td>\n","      <td>49</td>\n","      <td>New Orleans-Metairie, LA MSA</td>\n","      <td>2018-02-20</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>497</th>\n","      <td>1497</td>\n","      <td>Donte</td>\n","      <td>Barrera</td>\n","      <td>49</td>\n","      <td>Los Angeles-Long Beach-Anaheim, CA MSA</td>\n","      <td>2018-12-10</td>\n","      <td>ultimate</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>1498</td>\n","      <td>Scot</td>\n","      <td>Williamson</td>\n","      <td>51</td>\n","      <td>New York-Newark-Jersey City, NY-NJ-PA MSA</td>\n","      <td>2018-02-04</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>499</th>\n","      <td>1499</td>\n","      <td>Shena</td>\n","      <td>Dickson</td>\n","      <td>37</td>\n","      <td>Orlando-Kissimmee-Sanford, FL MSA</td>\n","      <td>2018-05-06</td>\n","      <td>surf</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>500 rows × 8 columns</p>\n","</div>"],"text/plain":["     user_id first_name   last_name  age  \\\n","0       1000   Anamaria       Bauer   45   \n","1       1001     Mickey   Wilkerson   28   \n","2       1002     Carlee     Hoffman   36   \n","3       1003   Reynaldo     Jenkins   52   \n","4       1004    Leonila    Thompson   40   \n","..       ...        ...         ...  ...   \n","495     1495      Fidel      Sharpe   67   \n","496     1496      Ariel    Shepherd   49   \n","497     1497      Donte     Barrera   49   \n","498     1498       Scot  Williamson   51   \n","499     1499      Shena     Dickson   37   \n","\n","                                          city    reg_date      plan  \\\n","0        Atlanta-Sandy Springs-Roswell, GA MSA  2018-12-24  ultimate   \n","1              Seattle-Tacoma-Bellevue, WA MSA  2018-08-13      surf   \n","2         Las Vegas-Henderson-Paradise, NV MSA  2018-10-21      surf   \n","3                                Tulsa, OK MSA  2018-01-28      surf   \n","4              Seattle-Tacoma-Bellevue, WA MSA  2018-05-23      surf   \n","..                                         ...         ...       ...   \n","495  New York-Newark-Jersey City, NY-NJ-PA MSA  2018-09-04      surf   \n","496               New Orleans-Metairie, LA MSA  2018-02-20      surf   \n","497     Los Angeles-Long Beach-Anaheim, CA MSA  2018-12-10  ultimate   \n","498  New York-Newark-Jersey City, NY-NJ-PA MSA  2018-02-04      surf   \n","499          Orlando-Kissimmee-Sanford, FL MSA  2018-05-06      surf   \n","\n","    churn_date  \n","0          NaN  \n","1          NaN  \n","2          NaN  \n","3          NaN  \n","4          NaN  \n","..         ...  \n","495        NaN  \n","496        NaN  \n","497        NaN  \n","498        NaN  \n","499        NaN  \n","\n","[500 rows x 8 columns]"]},"metadata":{},"output_type":"display_data"}],"source":["# Print a sample of the data for users\n","display(users)"]},{"cell_type":"markdown","id":"08e1f4b7","metadata":{"papermill":{"duration":0.024645,"end_time":"2023-11-11T03:54:38.666767","exception":false,"start_time":"2023-11-11T03:54:38.642122","status":"completed"},"tags":[]},"source":["**Observations on the User DataFrame:**\n","\n","The User DataFrame contains information about 500 customers, such as their names, ages, cities, sign-up dates, plans, and leave dates (if applicable).\n","The churn_date column has many missing values, which probably indicates that many users have not canceled their plan.\n","The reg_date (registration date) and churn_date (churn date) columns are of type object, indicating that they are in string format. It will be convenient to convert them to date format to facilitate their handling in subsequent analyses."]},{"cell_type":"markdown","id":"7664fdd2","metadata":{"papermill":{"duration":0.024963,"end_time":"2023-11-11T03:54:38.716665","exception":false,"start_time":"2023-11-11T03:54:38.691702","status":"completed"},"tags":[]},"source":["### Correct data"]},{"cell_type":"code","execution_count":7,"id":"ccff61fe","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:38.76965Z","iopub.status.busy":"2023-11-11T03:54:38.769258Z","iopub.status.idle":"2023-11-11T03:54:38.806886Z","shell.execute_reply":"2023-11-11T03:54:38.805382Z"},"papermill":{"duration":0.066982,"end_time":"2023-11-11T03:54:38.809364","exception":false,"start_time":"2023-11-11T03:54:38.742382","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>first_name</th>\n","      <th>last_name</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>reg_date</th>\n","      <th>plan</th>\n","      <th>churn_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>Anamaria</td>\n","      <td>Bauer</td>\n","      <td>45</td>\n","      <td>Atlanta-Sandy Springs-Roswell, GA MSA</td>\n","      <td>2018-12-24</td>\n","      <td>ultimate</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>Mickey</td>\n","      <td>Wilkerson</td>\n","      <td>28</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-08-13</td>\n","      <td>surf</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1002</td>\n","      <td>Carlee</td>\n","      <td>Hoffman</td>\n","      <td>36</td>\n","      <td>Las Vegas-Henderson-Paradise, NV MSA</td>\n","      <td>2018-10-21</td>\n","      <td>surf</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1003</td>\n","      <td>Reynaldo</td>\n","      <td>Jenkins</td>\n","      <td>52</td>\n","      <td>Tulsa, OK MSA</td>\n","      <td>2018-01-28</td>\n","      <td>surf</td>\n","      <td>NaT</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1004</td>\n","      <td>Leonila</td>\n","      <td>Thompson</td>\n","      <td>40</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-05-23</td>\n","      <td>surf</td>\n","      <td>NaT</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id first_name  last_name  age                                   city  \\\n","0     1000   Anamaria      Bauer   45  Atlanta-Sandy Springs-Roswell, GA MSA   \n","1     1001     Mickey  Wilkerson   28        Seattle-Tacoma-Bellevue, WA MSA   \n","2     1002     Carlee    Hoffman   36   Las Vegas-Henderson-Paradise, NV MSA   \n","3     1003   Reynaldo    Jenkins   52                          Tulsa, OK MSA   \n","4     1004    Leonila   Thompson   40        Seattle-Tacoma-Bellevue, WA MSA   \n","\n","    reg_date      plan churn_date  \n","0 2018-12-24  ultimate        NaT  \n","1 2018-08-13      surf        NaT  \n","2 2018-10-21      surf        NaT  \n","3 2018-01-28      surf        NaT  \n","4 2018-05-23      surf        NaT  "]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 500 entries, 0 to 499\n","Data columns (total 8 columns):\n"," #   Column      Non-Null Count  Dtype         \n","---  ------      --------------  -----         \n"," 0   user_id     500 non-null    int64         \n"," 1   first_name  500 non-null    object        \n"," 2   last_name   500 non-null    object        \n"," 3   age         500 non-null    int64         \n"," 4   city        500 non-null    object        \n"," 5   reg_date    500 non-null    datetime64[ns]\n"," 6   plan        500 non-null    object        \n"," 7   churn_date  34 non-null     datetime64[ns]\n","dtypes: datetime64[ns](2), int64(2), object(4)\n","memory usage: 31.4+ KB\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"}],"source":["users['reg_date'] = pd.to_datetime(users['reg_date'])\n","users['churn_date'] = pd.to_datetime(users['churn_date'])\n","\n","# Verify changes by showing the first rows of the users DataFrame\n","display(users.head())\n","display(users.info())"]},{"cell_type":"markdown","id":"336863ac","metadata":{"papermill":{"duration":0.026159,"end_time":"2023-11-11T03:54:38.860984","exception":false,"start_time":"2023-11-11T03:54:38.834825","status":"completed"},"tags":[]},"source":["### Calls"]},{"cell_type":"code","execution_count":8,"id":"e96e50af","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:38.915556Z","iopub.status.busy":"2023-11-11T03:54:38.914275Z","iopub.status.idle":"2023-11-11T03:54:38.95757Z","shell.execute_reply":"2023-11-11T03:54:38.955791Z"},"papermill":{"duration":0.073292,"end_time":"2023-11-11T03:54:38.96024","exception":false,"start_time":"2023-11-11T03:54:38.886948","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 137735 entries, 0 to 137734\n","Data columns (total 4 columns):\n"," #   Column     Non-Null Count   Dtype  \n","---  ------     --------------   -----  \n"," 0   id         137735 non-null  object \n"," 1   user_id    137735 non-null  int64  \n"," 2   call_date  137735 non-null  object \n"," 3   duration   137735 non-null  float64\n","dtypes: float64(1), int64(1), object(2)\n","memory usage: 4.2+ MB\n","None\n"]}],"source":["# Prints the general information/summary about the DataFrame of the calls\n","print(calls.info())"]},{"cell_type":"code","execution_count":9,"id":"88cc4ca3","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:39.014413Z","iopub.status.busy":"2023-11-11T03:54:39.013954Z","iopub.status.idle":"2023-11-11T03:54:39.025922Z","shell.execute_reply":"2023-11-11T03:54:39.025032Z"},"papermill":{"duration":0.041618,"end_time":"2023-11-11T03:54:39.02805","exception":false,"start_time":"2023-11-11T03:54:38.986432","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>user_id</th>\n","      <th>call_date</th>\n","      <th>duration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000_93</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>8.52</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000_145</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>13.66</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000_247</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>14.48</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000_309</td>\n","      <td>1000</td>\n","      <td>2018-12-28</td>\n","      <td>5.76</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000_380</td>\n","      <td>1000</td>\n","      <td>2018-12-30</td>\n","      <td>4.22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         id  user_id   call_date  duration\n","0   1000_93     1000  2018-12-27      8.52\n","1  1000_145     1000  2018-12-27     13.66\n","2  1000_247     1000  2018-12-27     14.48\n","3  1000_309     1000  2018-12-28      5.76\n","4  1000_380     1000  2018-12-30      4.22"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["# Print a sample of call data\n","calls.head()\n"]},{"cell_type":"markdown","id":"0dd38ae0","metadata":{"papermill":{"duration":0.025649,"end_time":"2023-11-11T03:54:39.079638","exception":false,"start_time":"2023-11-11T03:54:39.053989","status":"completed"},"tags":[]},"source":["**Remarks on the DataFrame calls:**\n","\n","The DataFrame contains information about 137,735 calls.\n","For each call, a unique ID, the user ID, the date of the call and its duration are provided.\n","The call_date column is of type object, indicating that it is in string format. It will be convenient to convert it to date format to facilitate its handling in subsequent analyses."]},{"cell_type":"markdown","id":"9b78234a","metadata":{"papermill":{"duration":0.026196,"end_time":"2023-11-11T03:54:39.131728","exception":false,"start_time":"2023-11-11T03:54:39.105532","status":"completed"},"tags":[]},"source":["### Fix data"]},{"cell_type":"code","execution_count":10,"id":"18c853bc","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:39.186476Z","iopub.status.busy":"2023-11-11T03:54:39.184881Z","iopub.status.idle":"2023-11-11T03:54:39.251402Z","shell.execute_reply":"2023-11-11T03:54:39.250273Z"},"papermill":{"duration":0.096323,"end_time":"2023-11-11T03:54:39.253947","exception":false,"start_time":"2023-11-11T03:54:39.157624","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 137735 entries, 0 to 137734\n","Data columns (total 4 columns):\n"," #   Column     Non-Null Count   Dtype         \n","---  ------     --------------   -----         \n"," 0   id         137735 non-null  object        \n"," 1   user_id    137735 non-null  int64         \n"," 2   call_date  137735 non-null  datetime64[ns]\n"," 3   duration   137735 non-null  float64       \n","dtypes: datetime64[ns](1), float64(1), int64(1), object(1)\n","memory usage: 4.2+ MB\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>user_id</th>\n","      <th>call_date</th>\n","      <th>duration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000_93</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>8.52</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000_145</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>13.66</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000_247</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>14.48</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000_309</td>\n","      <td>1000</td>\n","      <td>2018-12-28</td>\n","      <td>5.76</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000_380</td>\n","      <td>1000</td>\n","      <td>2018-12-30</td>\n","      <td>4.22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         id  user_id  call_date  duration\n","0   1000_93     1000 2018-12-27      8.52\n","1  1000_145     1000 2018-12-27     13.66\n","2  1000_247     1000 2018-12-27     14.48\n","3  1000_309     1000 2018-12-28      5.76\n","4  1000_380     1000 2018-12-30      4.22"]},"metadata":{},"output_type":"display_data"}],"source":["calls['call_date'] = pd.to_datetime(calls['call_date'])\n","display(calls.info())\n","display(calls.head())"]},{"cell_type":"markdown","id":"c6b7af2f","metadata":{"papermill":{"duration":0.026157,"end_time":"2023-11-11T03:54:39.306707","exception":false,"start_time":"2023-11-11T03:54:39.28055","status":"completed"},"tags":[]},"source":["### Messages"]},{"cell_type":"code","execution_count":11,"id":"e7f94ed6","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:39.362681Z","iopub.status.busy":"2023-11-11T03:54:39.362247Z","iopub.status.idle":"2023-11-11T03:54:39.39387Z","shell.execute_reply":"2023-11-11T03:54:39.392552Z"},"papermill":{"duration":0.062647,"end_time":"2023-11-11T03:54:39.396505","exception":false,"start_time":"2023-11-11T03:54:39.333858","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 76051 entries, 0 to 76050\n","Data columns (total 3 columns):\n"," #   Column        Non-Null Count  Dtype \n","---  ------        --------------  ----- \n"," 0   id            76051 non-null  object\n"," 1   user_id       76051 non-null  int64 \n"," 2   message_date  76051 non-null  object\n","dtypes: int64(1), object(2)\n","memory usage: 1.7+ MB\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"}],"source":["# Prints the general information/summary about the DataFrame of the messages\n","display(messages.info())"]},{"cell_type":"code","execution_count":12,"id":"fcfcdde8","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:39.452189Z","iopub.status.busy":"2023-11-11T03:54:39.451745Z","iopub.status.idle":"2023-11-11T03:54:39.463713Z","shell.execute_reply":"2023-11-11T03:54:39.462324Z"},"papermill":{"duration":0.043036,"end_time":"2023-11-11T03:54:39.466421","exception":false,"start_time":"2023-11-11T03:54:39.423385","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>user_id</th>\n","      <th>message_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000_125</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000_160</td>\n","      <td>1000</td>\n","      <td>2018-12-31</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000_223</td>\n","      <td>1000</td>\n","      <td>2018-12-31</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000_251</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000_255</td>\n","      <td>1000</td>\n","      <td>2018-12-26</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         id  user_id message_date\n","0  1000_125     1000   2018-12-27\n","1  1000_160     1000   2018-12-31\n","2  1000_223     1000   2018-12-31\n","3  1000_251     1000   2018-12-27\n","4  1000_255     1000   2018-12-26"]},"metadata":{},"output_type":"display_data"}],"source":["# Print a sample of data for messages\n","display(messages.head())"]},{"cell_type":"markdown","id":"dd2e8902","metadata":{"papermill":{"duration":0.026706,"end_time":"2023-11-11T03:54:39.520094","exception":false,"start_time":"2023-11-11T03:54:39.493388","status":"completed"},"tags":[]},"source":["**Observations on the DataFrame:**\n","\n","The DataFrame contains information about 76,051 messages.\n","For each message, a unique ID, the user ID, and the date of the message are provided.\n","The message_date column is of type object, indicating that it is in string format. It will be convenient to convert it to date format to facilitate its handling in subsequent analyses."]},{"cell_type":"markdown","id":"99f71a69","metadata":{"papermill":{"duration":0.027267,"end_time":"2023-11-11T03:54:39.574388","exception":false,"start_time":"2023-11-11T03:54:39.547121","status":"completed"},"tags":[]},"source":[" "]},{"cell_type":"markdown","id":"67a67ed9","metadata":{"papermill":{"duration":0.02652,"end_time":"2023-11-11T03:54:39.62888","exception":false,"start_time":"2023-11-11T03:54:39.60236","status":"completed"},"tags":[]},"source":["### Fix data"]},{"cell_type":"code","execution_count":13,"id":"f84c5e33","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:39.685131Z","iopub.status.busy":"2023-11-11T03:54:39.684653Z","iopub.status.idle":"2023-11-11T03:54:39.729889Z","shell.execute_reply":"2023-11-11T03:54:39.728619Z"},"papermill":{"duration":0.076374,"end_time":"2023-11-11T03:54:39.732901","exception":false,"start_time":"2023-11-11T03:54:39.656527","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 76051 entries, 0 to 76050\n","Data columns (total 3 columns):\n"," #   Column        Non-Null Count  Dtype         \n","---  ------        --------------  -----         \n"," 0   id            76051 non-null  object        \n"," 1   user_id       76051 non-null  int64         \n"," 2   message_date  76051 non-null  datetime64[ns]\n","dtypes: datetime64[ns](1), int64(1), object(1)\n","memory usage: 1.7+ MB\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>user_id</th>\n","      <th>message_date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000_125</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000_160</td>\n","      <td>1000</td>\n","      <td>2018-12-31</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000_223</td>\n","      <td>1000</td>\n","      <td>2018-12-31</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000_251</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000_255</td>\n","      <td>1000</td>\n","      <td>2018-12-26</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         id  user_id message_date\n","0  1000_125     1000   2018-12-27\n","1  1000_160     1000   2018-12-31\n","2  1000_223     1000   2018-12-31\n","3  1000_251     1000   2018-12-27\n","4  1000_255     1000   2018-12-26"]},"metadata":{},"output_type":"display_data"}],"source":["messages['message_date'] = pd.to_datetime(messages['message_date'])\n","display(messages.info())\n","display(messages.head())"]},{"cell_type":"markdown","id":"f96b9b8e","metadata":{"papermill":{"duration":0.026975,"end_time":"2023-11-11T03:54:39.787925","exception":false,"start_time":"2023-11-11T03:54:39.76095","status":"completed"},"tags":[]},"source":["## Internet"]},{"cell_type":"code","execution_count":14,"id":"788159a5","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:39.845901Z","iopub.status.busy":"2023-11-11T03:54:39.84547Z","iopub.status.idle":"2023-11-11T03:54:39.882117Z","shell.execute_reply":"2023-11-11T03:54:39.880988Z"},"papermill":{"duration":0.069208,"end_time":"2023-11-11T03:54:39.884516","exception":false,"start_time":"2023-11-11T03:54:39.815308","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 104825 entries, 0 to 104824\n","Data columns (total 4 columns):\n"," #   Column        Non-Null Count   Dtype  \n","---  ------        --------------   -----  \n"," 0   id            104825 non-null  object \n"," 1   user_id       104825 non-null  int64  \n"," 2   session_date  104825 non-null  object \n"," 3   mb_used       104825 non-null  float64\n","dtypes: float64(1), int64(1), object(2)\n","memory usage: 3.2+ MB\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"}],"source":["# Prints the general information/summary about the DataFrame of the messages\n","display(internet.info())"]},{"cell_type":"code","execution_count":15,"id":"09cb9dfc","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:39.941463Z","iopub.status.busy":"2023-11-11T03:54:39.940946Z","iopub.status.idle":"2023-11-11T03:54:39.953636Z","shell.execute_reply":"2023-11-11T03:54:39.95215Z"},"papermill":{"duration":0.04433,"end_time":"2023-11-11T03:54:39.9562","exception":false,"start_time":"2023-11-11T03:54:39.91187","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>user_id</th>\n","      <th>session_date</th>\n","      <th>mb_used</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000_13</td>\n","      <td>1000</td>\n","      <td>2018-12-29</td>\n","      <td>89.86</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000_204</td>\n","      <td>1000</td>\n","      <td>2018-12-31</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000_379</td>\n","      <td>1000</td>\n","      <td>2018-12-28</td>\n","      <td>660.40</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000_413</td>\n","      <td>1000</td>\n","      <td>2018-12-26</td>\n","      <td>270.99</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000_442</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>880.22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         id  user_id session_date  mb_used\n","0   1000_13     1000   2018-12-29    89.86\n","1  1000_204     1000   2018-12-31     0.00\n","2  1000_379     1000   2018-12-28   660.40\n","3  1000_413     1000   2018-12-26   270.99\n","4  1000_442     1000   2018-12-27   880.22"]},"metadata":{},"output_type":"display_data"}],"source":["# Print a sample of data for internet traffic\n","display(internet.head(5))"]},{"cell_type":"markdown","id":"0ba71560","metadata":{"papermill":{"duration":0.028155,"end_time":"2023-11-11T03:54:40.012504","exception":false,"start_time":"2023-11-11T03:54:39.984349","status":"completed"},"tags":[]},"source":["**Observations**\n","There are 104825 cells, there is a different ID, but it is observed that the user_id column is repeated n number of times, which are the same users who have used the same service, the session date column is as a string, so it will be modified to future analysis to datetim"]},{"cell_type":"markdown","id":"efead862","metadata":{"papermill":{"duration":0.028075,"end_time":"2023-11-11T03:54:40.069554","exception":false,"start_time":"2023-11-11T03:54:40.041479","status":"completed"},"tags":[]},"source":["### Fix data"]},{"cell_type":"code","execution_count":16,"id":"7b38255f","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:40.127018Z","iopub.status.busy":"2023-11-11T03:54:40.126608Z","iopub.status.idle":"2023-11-11T03:54:40.182162Z","shell.execute_reply":"2023-11-11T03:54:40.180774Z"},"papermill":{"duration":0.087666,"end_time":"2023-11-11T03:54:40.184873","exception":false,"start_time":"2023-11-11T03:54:40.097207","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 104825 entries, 0 to 104824\n","Data columns (total 4 columns):\n"," #   Column        Non-Null Count   Dtype         \n","---  ------        --------------   -----         \n"," 0   id            104825 non-null  object        \n"," 1   user_id       104825 non-null  int64         \n"," 2   session_date  104825 non-null  datetime64[ns]\n"," 3   mb_used       104825 non-null  float64       \n","dtypes: datetime64[ns](1), float64(1), int64(1), object(1)\n","memory usage: 3.2+ MB\n"]},{"data":{"text/plain":["None"]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>user_id</th>\n","      <th>session_date</th>\n","      <th>mb_used</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000_13</td>\n","      <td>1000</td>\n","      <td>2018-12-29</td>\n","      <td>89.86</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000_204</td>\n","      <td>1000</td>\n","      <td>2018-12-31</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1000_379</td>\n","      <td>1000</td>\n","      <td>2018-12-28</td>\n","      <td>660.40</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1000_413</td>\n","      <td>1000</td>\n","      <td>2018-12-26</td>\n","      <td>270.99</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1000_442</td>\n","      <td>1000</td>\n","      <td>2018-12-27</td>\n","      <td>880.22</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         id  user_id session_date  mb_used\n","0   1000_13     1000   2018-12-29    89.86\n","1  1000_204     1000   2018-12-31     0.00\n","2  1000_379     1000   2018-12-28   660.40\n","3  1000_413     1000   2018-12-26   270.99\n","4  1000_442     1000   2018-12-27   880.22"]},"metadata":{},"output_type":"display_data"}],"source":["internet['session_date'] = pd.to_datetime(internet['session_date'])\n","display(internet.info())\n","display(internet.head())"]},{"cell_type":"markdown","id":"74612e00","metadata":{"papermill":{"duration":0.027978,"end_time":"2023-11-11T03:54:40.241871","exception":false,"start_time":"2023-11-11T03:54:40.213893","status":"completed"},"tags":[]},"source":["## Analyze the conditions of the plan"]},{"cell_type":"code","execution_count":17,"id":"3fe54930","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:40.30164Z","iopub.status.busy":"2023-11-11T03:54:40.300525Z","iopub.status.idle":"2023-11-11T03:54:40.314361Z","shell.execute_reply":"2023-11-11T03:54:40.313208Z"},"papermill":{"duration":0.046209,"end_time":"2023-11-11T03:54:40.316759","exception":false,"start_time":"2023-11-11T03:54:40.27055","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>messages_included</th>\n","      <th>mb_per_month_included</th>\n","      <th>minutes_included</th>\n","      <th>usd_monthly_pay</th>\n","      <th>usd_per_gb</th>\n","      <th>usd_per_message</th>\n","      <th>usd_per_minute</th>\n","      <th>plan_name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>50</td>\n","      <td>15360</td>\n","      <td>500</td>\n","      <td>20</td>\n","      <td>10</td>\n","      <td>0.03</td>\n","      <td>0.03</td>\n","      <td>surf</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1000</td>\n","      <td>30720</td>\n","      <td>3000</td>\n","      <td>70</td>\n","      <td>7</td>\n","      <td>0.01</td>\n","      <td>0.01</td>\n","      <td>ultimate</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   messages_included  mb_per_month_included  minutes_included  \\\n","0                 50                  15360               500   \n","1               1000                  30720              3000   \n","\n","   usd_monthly_pay  usd_per_gb  usd_per_message  usd_per_minute plan_name  \n","0               20          10             0.03            0.03      surf  \n","1               70           7             0.01            0.01  ultimate  "]},"metadata":{},"output_type":"display_data"}],"source":["# Print the terms of the plan and make sure they are clear to you\n","display(plans)"]},{"cell_type":"markdown","id":"0d1202c4","metadata":{"papermill":{"duration":0.028695,"end_time":"2023-11-11T03:54:40.374229","exception":false,"start_time":"2023-11-11T03:54:40.345534","status":"completed"},"tags":[]},"source":["Surf Plan:\n","\n","Messages included: 50\n","MB included per month: 15,360 MB (approximately 15 GB)\n","Minutes included: 500\n","Monthly payment: 20\n","Cost per additional GB: 10\n","Cost per additional message: 0.03\n","Cost per additional minute: 0.03\n","\n","Ultimate Plan:\n","\n","Messages included: 1,000\n","MB included per month: 30,720 MB (approximately 30 GB)\n","Minutes included: 3,000\n","Monthly payment: 70\n","Cost per additional GB: 7\n","Cost per additional message: 0.01\n","Cost per additional minute: 0.01"]},{"cell_type":"markdown","id":"720f825d","metadata":{"papermill":{"duration":0.028484,"end_time":"2023-11-11T03:54:40.433207","exception":false,"start_time":"2023-11-11T03:54:40.404723","status":"completed"},"tags":[]},"source":["### Add data per user\n"]},{"cell_type":"code","execution_count":18,"id":"8215b11d","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:40.491914Z","iopub.status.busy":"2023-11-11T03:54:40.491539Z","iopub.status.idle":"2023-11-11T03:54:40.580894Z","shell.execute_reply":"2023-11-11T03:54:40.579647Z"},"papermill":{"duration":0.122173,"end_time":"2023-11-11T03:54:40.583947","exception":false,"start_time":"2023-11-11T03:54:40.461774","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>calls_count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>2018</td>\n","      <td>12</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>8</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>9</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>10</td>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>11</td>\n","      <td>64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  year  month  calls_count\n","0     1000  2018     12           16\n","1     1001  2018      8           27\n","2     1001  2018      9           49\n","3     1001  2018     10           65\n","4     1001  2018     11           64"]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["# Calculates the number of calls made by each user per month. Save the result.\n","\n","# Extract the month and year of the call date and add it as a new column\n","calls['month'] = calls['call_date'].dt.month\n","calls['year'] = calls['call_date'].dt.year\n","\n","# Group by user_id and month to calculate the number of calls\n","calls_count = calls.groupby(['user_id', 'year', 'month']).agg({'id': 'count'}).reset_index()\n","calls_count = calls_count.rename(columns={'id': 'calls_count'})\n","\n","# Show the first rows of the resulting DataFrame\n","calls_count.head()\n","\n"]},{"cell_type":"code","execution_count":19,"id":"980e3b8f","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:40.644585Z","iopub.status.busy":"2023-11-11T03:54:40.643599Z","iopub.status.idle":"2023-11-11T03:54:40.679527Z","shell.execute_reply":"2023-11-11T03:54:40.67795Z"},"papermill":{"duration":0.068758,"end_time":"2023-11-11T03:54:40.682157","exception":false,"start_time":"2023-11-11T03:54:40.613399","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>minutes_used</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>2018</td>\n","      <td>12</td>\n","      <td>116.83</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>8</td>\n","      <td>171.14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>9</td>\n","      <td>297.69</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>10</td>\n","      <td>374.11</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>11</td>\n","      <td>404.59</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  year  month  minutes_used\n","0     1000  2018     12        116.83\n","1     1001  2018      8        171.14\n","2     1001  2018      9        297.69\n","3     1001  2018     10        374.11\n","4     1001  2018     11        404.59"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["# Calculates the number of minutes each user used per month. Save the result.\n","\n","# Agrupar por user_id y mes para calcular la cantidad total de minutos\n","minutes_used = calls.groupby(['user_id', 'year', 'month']).agg({'duration': 'sum'}).reset_index()\n","minutes_used = minutes_used.rename(columns={'duration': 'minutes_used'})\n","\n","# Mostrar las primeras filas del DataFrame resultante\n","minutes_used.head()\n"]},{"cell_type":"code","execution_count":20,"id":"80fb2f1d","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:40.742645Z","iopub.status.busy":"2023-11-11T03:54:40.74224Z","iopub.status.idle":"2023-11-11T03:54:40.794599Z","shell.execute_reply":"2023-11-11T03:54:40.793565Z"},"papermill":{"duration":0.08596,"end_time":"2023-11-11T03:54:40.797229","exception":false,"start_time":"2023-11-11T03:54:40.711269","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>messages_count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>2018</td>\n","      <td>12</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>8</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>9</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>10</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>11</td>\n","      <td>36</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  year  month  messages_count\n","0     1000  2018     12              11\n","1     1001  2018      8              30\n","2     1001  2018      9              44\n","3     1001  2018     10              53\n","4     1001  2018     11              36"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["# Calcula el número de mensajes enviados por cada usuario por mes. Guarda el resultado.\n","\n","# Extract the month and year from the message date and add it as a new column\n","messages['month'] = messages['message_date'].dt.month\n","messages['year'] = messages['message_date'].dt.year\n","\n","# Group by user_id and month to calculate the number of messages\n","messages_count = messages.groupby(['user_id', 'year', 'month']).agg({'id': 'count'}).reset_index()\n","messages_count = messages_count.rename(columns={'id': 'messages_count'})\n","\n","# Show the first rows of the resulting DataFrame\n","messages_count.head()\n"]},{"cell_type":"code","execution_count":21,"id":"ccd00749","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:40.859344Z","iopub.status.busy":"2023-11-11T03:54:40.858272Z","iopub.status.idle":"2023-11-11T03:54:40.913642Z","shell.execute_reply":"2023-11-11T03:54:40.91242Z"},"papermill":{"duration":0.089677,"end_time":"2023-11-11T03:54:40.916775","exception":false,"start_time":"2023-11-11T03:54:40.827098","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>mb_used_total</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>2018</td>\n","      <td>12</td>\n","      <td>1901.47</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>8</td>\n","      <td>6919.15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>9</td>\n","      <td>13314.82</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>10</td>\n","      <td>22330.49</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>11</td>\n","      <td>18504.30</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  year  month  mb_used_total\n","0     1000  2018     12        1901.47\n","1     1001  2018      8        6919.15\n","2     1001  2018      9       13314.82\n","3     1001  2018     10       22330.49\n","4     1001  2018     11       18504.30"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["# Calculate the volume of internet traffic used by each user per month. Save the result.\n","\n","# Extract the month and year of the internet log date and add it as a new column\n","internet['month'] = internet['session_date'].dt.month\n","internet['year'] = internet['session_date'].dt.year\n","\n","# Group by user_id and month to calculate internet traffic volume (in MB)\n","internet_volume = internet.groupby(['user_id', 'year', 'month']).agg({'mb_used': 'sum'}).reset_index()\n","internet_volume = internet_volume.rename(columns={'mb_used': 'mb_used_total'})\n","\n","# Show the first rows of the resulting DataFrame\n","internet_volume.head()\n"]},{"cell_type":"code","execution_count":22,"id":"d2030ad8","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:40.977943Z","iopub.status.busy":"2023-11-11T03:54:40.977519Z","iopub.status.idle":"2023-11-11T03:54:41.007564Z","shell.execute_reply":"2023-11-11T03:54:41.006261Z"},"papermill":{"duration":0.064071,"end_time":"2023-11-11T03:54:41.010511","exception":false,"start_time":"2023-11-11T03:54:40.94644","status":"completed"},"tags":[]},"outputs":[],"source":["# Combine data for calls, minutes, messages and internet based on user_id and month\n","merged_data = (calls_count\n","               .merge(minutes_used, on=['user_id', 'year', 'month'], how='outer')\n","               .merge(messages_count, on=['user_id', 'year', 'month'], how='outer')\n","               .merge(internet_volume, on=['user_id', 'year', 'month'], how='outer')\n","              )\n","\n","# Combine the information of the plan to which each user belongs\n","merged_data = merged_data.merge(users[['user_id', 'plan']], on='user_id', how='left')\n"]},{"cell_type":"code","execution_count":23,"id":"d7f2e5a3","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:41.073014Z","iopub.status.busy":"2023-11-11T03:54:41.072569Z","iopub.status.idle":"2023-11-11T03:54:41.091324Z","shell.execute_reply":"2023-11-11T03:54:41.090141Z"},"papermill":{"duration":0.053058,"end_time":"2023-11-11T03:54:41.093883","exception":false,"start_time":"2023-11-11T03:54:41.040825","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>calls_count</th>\n","      <th>minutes_used</th>\n","      <th>messages_count</th>\n","      <th>mb_used_total</th>\n","      <th>plan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>2018</td>\n","      <td>12</td>\n","      <td>16.0</td>\n","      <td>116.83</td>\n","      <td>11.0</td>\n","      <td>1901.47</td>\n","      <td>ultimate</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>8</td>\n","      <td>27.0</td>\n","      <td>171.14</td>\n","      <td>30.0</td>\n","      <td>6919.15</td>\n","      <td>surf</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>9</td>\n","      <td>49.0</td>\n","      <td>297.69</td>\n","      <td>44.0</td>\n","      <td>13314.82</td>\n","      <td>surf</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>10</td>\n","      <td>65.0</td>\n","      <td>374.11</td>\n","      <td>53.0</td>\n","      <td>22330.49</td>\n","      <td>surf</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>11</td>\n","      <td>64.0</td>\n","      <td>404.59</td>\n","      <td>36.0</td>\n","      <td>18504.30</td>\n","      <td>surf</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  year  month  calls_count  minutes_used  messages_count  \\\n","0     1000  2018     12         16.0        116.83            11.0   \n","1     1001  2018      8         27.0        171.14            30.0   \n","2     1001  2018      9         49.0        297.69            44.0   \n","3     1001  2018     10         65.0        374.11            53.0   \n","4     1001  2018     11         64.0        404.59            36.0   \n","\n","   mb_used_total      plan  \n","0        1901.47  ultimate  \n","1        6919.15      surf  \n","2       13314.82      surf  \n","3       22330.49      surf  \n","4       18504.30      surf  "]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["# Add plan information\n","\n","# Fill the NaN values with 0, since if there are no records it means that the user did not use the service in that month\n","\n","merged_data = merged_data.fillna(0)\n","\n","# Show the first rows of the combined DataFrame\n","merged_data.head()"]},{"cell_type":"code","execution_count":24,"id":"5311642f","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:41.157494Z","iopub.status.busy":"2023-11-11T03:54:41.156319Z","iopub.status.idle":"2023-11-11T03:54:42.545587Z","shell.execute_reply":"2023-11-11T03:54:42.544406Z"},"papermill":{"duration":1.424047,"end_time":"2023-11-11T03:54:42.548044","exception":false,"start_time":"2023-11-11T03:54:41.123997","status":"completed"},"scrolled":true,"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>calls_count</th>\n","      <th>minutes_used</th>\n","      <th>messages_count</th>\n","      <th>mb_used_total</th>\n","      <th>plan</th>\n","      <th>monthly_revenue</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>2018</td>\n","      <td>12</td>\n","      <td>16.0</td>\n","      <td>116.83</td>\n","      <td>11.0</td>\n","      <td>1901.47</td>\n","      <td>ultimate</td>\n","      <td>70.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>8</td>\n","      <td>27.0</td>\n","      <td>171.14</td>\n","      <td>30.0</td>\n","      <td>6919.15</td>\n","      <td>surf</td>\n","      <td>20.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>9</td>\n","      <td>49.0</td>\n","      <td>297.69</td>\n","      <td>44.0</td>\n","      <td>13314.82</td>\n","      <td>surf</td>\n","      <td>20.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>10</td>\n","      <td>65.0</td>\n","      <td>374.11</td>\n","      <td>53.0</td>\n","      <td>22330.49</td>\n","      <td>surf</td>\n","      <td>88.161191</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001</td>\n","      <td>2018</td>\n","      <td>11</td>\n","      <td>64.0</td>\n","      <td>404.59</td>\n","      <td>36.0</td>\n","      <td>18504.30</td>\n","      <td>surf</td>\n","      <td>50.706055</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  year  month  calls_count  minutes_used  messages_count  \\\n","0     1000  2018     12         16.0        116.83            11.0   \n","1     1001  2018      8         27.0        171.14            30.0   \n","2     1001  2018      9         49.0        297.69            44.0   \n","3     1001  2018     10         65.0        374.11            53.0   \n","4     1001  2018     11         64.0        404.59            36.0   \n","\n","   mb_used_total      plan  monthly_revenue  \n","0        1901.47  ultimate        70.000000  \n","1        6919.15      surf        20.000000  \n","2       13314.82      surf        20.000000  \n","3       22330.49      surf        88.161191  \n","4       18504.30      surf        50.706055  "]},"metadata":{},"output_type":"display_data"}],"source":["# Calculate the monthly income for each user\n","def calculate_monthly_revenue(row):\n","    # Get the user's plan and plan conditions\n","    plan = plans[plans['plan_name'] == row['plan']].iloc[0]\n","    \n","    # Calculate the cost for additional calls\n","    call_cost = max(row['minutes_used'] - plan['minutes_included'], 0) * plan['usd_per_minute']\n","    \n","    # Calculate the cost for additional messages\n","    message_cost = max(row['messages_count'] - plan['messages_included'], 0) * plan['usd_per_message']\n","    \n","    # Calculate the cost for additional internet traffic (in GB)\n","    gb_used = row['mb_used_total'] / 1024\n","    gb_included = plan['mb_per_month_included'] / 1024\n","    internet_cost = max(gb_used - gb_included, 0) * plan['usd_per_gb']\n","    \n","    # Add all costs and add the monthly plan payment\n","    total_cost = call_cost + message_cost + internet_cost + plan['usd_monthly_pay']\n","    \n","    return total_cost\n","\n","# Apply function to calculate monthly income\n","merged_data['monthly_revenue'] = merged_data.apply(calculate_monthly_revenue, axis=1)\n","\n","# Show the first rows of the DataFrame with the monthly income column\n","display(merged_data.head())"]},{"cell_type":"markdown","id":"11f6cf34","metadata":{"papermill":{"duration":0.030515,"end_time":"2023-11-11T03:54:42.609784","exception":false,"start_time":"2023-11-11T03:54:42.579269","status":"completed"},"tags":[]},"source":["## Analyze user behavior"]},{"cell_type":"markdown","id":"5a496336","metadata":{"papermill":{"duration":0.029522,"end_time":"2023-11-11T03:54:42.669234","exception":false,"start_time":"2023-11-11T03:54:42.639712","status":"completed"},"tags":[]},"source":["### Calls"]},{"cell_type":"code","execution_count":25,"id":"f957a5e4","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:42.732038Z","iopub.status.busy":"2023-11-11T03:54:42.731649Z","iopub.status.idle":"2023-11-11T03:54:43.478501Z","shell.execute_reply":"2023-11-11T03:54:43.477419Z"},"papermill":{"duration":0.781668,"end_time":"2023-11-11T03:54:43.481329","exception":false,"start_time":"2023-11-11T03:54:42.699661","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1200x700 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Compare the average call duration for each plan for each month. Draw a bar graph to visualize it.\n","# Extract month from call_date column\n","calls['month'] = pd.to_datetime(calls['call_date']).dt.month\n","\n","# Group data by month and plan, and calculate average call duration\n","avg_duration = (calls.merge(users, on='user_id', how='left')\n","                .groupby(['month', 'plan'])['duration']\n","                .mean()\n","                .reset_index())\n","\n","# Draw a bar graph to visualize the results\n","plt.figure(figsize=(12, 7))\n","sns.barplot(data=avg_duration, x='month', y='duration', hue='plan', palette='pastel')\n","plt.title('Average call duration by plan and month')\n","plt.xlabel('Month')\n","plt.ylabel('Average duration (minutes)')\n","plt.legend(title='Plan')\n","plt.show()"]},{"cell_type":"markdown","id":"2dc40e45","metadata":{"papermill":{"duration":0.030607,"end_time":"2023-11-11T03:54:43.542758","exception":false,"start_time":"2023-11-11T03:54:43.512151","status":"completed"},"tags":[]},"source":["The graph above shows the average call duration by plan and month. We can observe variations in the duration of calls over the months for both plans. However, it is important to note that, in general, the average call duration appears to be similar between the \"surf\" and \"ultimate\" plans."]},{"cell_type":"code","execution_count":26,"id":"1d358034","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:43.608664Z","iopub.status.busy":"2023-11-11T03:54:43.608008Z","iopub.status.idle":"2023-11-11T03:54:44.396239Z","shell.execute_reply":"2023-11-11T03:54:44.395508Z"},"papermill":{"duration":0.82395,"end_time":"2023-11-11T03:54:44.398891","exception":false,"start_time":"2023-11-11T03:54:43.574941","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1200x700 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Compare the number of minutes that users of each plan require each month. Plot a histogram.\n","\n","# Group by user, month and plan, and add call durations\n","total_minutes = (calls.merge(users, on='user_id', how='left')\n","                 .groupby(['user_id', 'month', 'plan'])['duration']\n","                 .sum()\n","                 .reset_index())\n","\n","# Plot a histogram\n","plt.figure(figsize=(12, 7))\n","for plan, color in [('surf', 'blue'), ('ultimate', 'red')]:\n","    sns.histplot(total_minutes[total_minutes['plan'] == plan]['duration'], kde=True, label=plan, bins=30, alpha=0.5, color=color)\n","\n","plt.title('Distribution of the total number of minutes by plan')\n","plt.xlabel('Total Minutes')\n","plt.ylabel('Number of users')\n","plt.legend(title='Plan')\n","plt.show()"]},{"cell_type":"markdown","id":"f93e25c4","metadata":{"papermill":{"duration":0.031392,"end_time":"2023-11-11T03:54:44.463846","exception":false,"start_time":"2023-11-11T03:54:44.432454","status":"completed"},"tags":[]},"source":["The graph above shows the distribution of the total number of minutes used by users of each plan each month. It can be observed that:\n","\n","Surf plan users tend to have a wider spread in the number of minutes used, with a peak around 500 minutes.\n","Users of the \"ultimate\" plan show a more uniform distribution, although with a slight peak around 500 minutes."]},{"cell_type":"code","execution_count":27,"id":"ca761a5b","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:44.529799Z","iopub.status.busy":"2023-11-11T03:54:44.529356Z","iopub.status.idle":"2023-11-11T03:54:44.552773Z","shell.execute_reply":"2023-11-11T03:54:44.551423Z"},"papermill":{"duration":0.059713,"end_time":"2023-11-11T03:54:44.555455","exception":false,"start_time":"2023-11-11T03:54:44.495742","status":"completed"},"scrolled":true,"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>plan</th>\n","      <th>mean</th>\n","      <th>var</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>surf</td>\n","      <td>412.097890</td>\n","      <td>47001.254231</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ultimate</td>\n","      <td>410.180954</td>\n","      <td>50510.631705</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       plan        mean           var\n","0      surf  412.097890  47001.254231\n","1  ultimate  410.180954  50510.631705"]},"metadata":{},"output_type":"display_data"}],"source":["# Calculates the mean and variance of the monthly call duration.\n","stats_duration = total_minutes.groupby('plan')['duration'].agg(['mean', 'var']).reset_index()\n","\n","display(stats_duration)"]},{"cell_type":"markdown","id":"7352d6b5","metadata":{"papermill":{"duration":0.03156,"end_time":"2023-11-11T03:54:44.619316","exception":false,"start_time":"2023-11-11T03:54:44.587756","status":"completed"},"tags":[]},"source":["Here are the descriptive statistics of monthly call duration for both plans:\n","\n","Surf Plan: Average: Approximately 412 minutes. Variance: Approximately 47,001. Ultimate Plan: Medium: Approximately 410 minutes. Variance: Approximately 50,510. These values indicate that, on average, users of both plans use around 410-412 minutes per month. However, the variance in the \"ultimate\" plan is slightly higher, suggesting greater variability in the behavior of users of this plan compared to the \"surf\" plan."]},{"cell_type":"code","execution_count":28,"id":"bc294178","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:44.68541Z","iopub.status.busy":"2023-11-11T03:54:44.684992Z","iopub.status.idle":"2023-11-11T03:54:44.986041Z","shell.execute_reply":"2023-11-11T03:54:44.984508Z"},"papermill":{"duration":0.337598,"end_time":"2023-11-11T03:54:44.988941","exception":false,"start_time":"2023-11-11T03:54:44.651343","status":"completed"},"scrolled":true,"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1000x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Plot a boxplot to visualize the distribution of monthly call duration.\n","plt.figure(figsize=(10, 6))\n","sns.boxplot(data=total_minutes, x='plan', y='duration', palette='pastel')\n","plt.title('Distribution of monthly call duration by plan')\n","plt.xlabel('Plan')\n","plt.ylabel('Total Minutes')\n","plt.show()\n"]},{"cell_type":"markdown","id":"465f4438","metadata":{"papermill":{"duration":0.032684,"end_time":"2023-11-11T03:54:45.054266","exception":false,"start_time":"2023-11-11T03:54:45.021582","status":"completed"},"tags":[]},"source":["The boxplot shows the distribution of monthly call duration for both plans. We can observe:\n","\n","Users on the \"surf\" plan have a slightly lower median compared to users on the \"ultimate\" plan.\n","Both plans show a similar distribution in terms of quartiles.\n","There are some outliers, especially for the \"surf\" plan."]},{"cell_type":"markdown","id":"63df03ce","metadata":{"papermill":{"duration":0.032256,"end_time":"2023-11-11T03:54:45.118885","exception":false,"start_time":"2023-11-11T03:54:45.086629","status":"completed"},"tags":[]},"source":["In general, users of both plans use around 410-412 minutes per month.\n","The variance in the \"ultimate\" plan is slightly higher, suggesting greater variability in the behavior of users of this plan.\n","The box plots confirm that the distribution of call durations is similar between both plans, although the \"surf\" plan shows more outliers."]},{"cell_type":"markdown","id":"92a4a837","metadata":{"papermill":{"duration":0.03242,"end_time":"2023-11-11T03:54:45.184434","exception":false,"start_time":"2023-11-11T03:54:45.152014","status":"completed"},"tags":[]},"source":["### Messages"]},{"cell_type":"code","execution_count":29,"id":"590dea58","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:45.251332Z","iopub.status.busy":"2023-11-11T03:54:45.250659Z","iopub.status.idle":"2023-11-11T03:54:45.998037Z","shell.execute_reply":"2023-11-11T03:54:45.996744Z"},"papermill":{"duration":0.783678,"end_time":"2023-11-11T03:54:46.000614","exception":false,"start_time":"2023-11-11T03:54:45.216936","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1200x700 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Will buy the number of messages that users of each plan tend to send each month\n","# Extract month from message_date column\n","messages['month'] = pd.to_datetime(messages['message_date']).dt.month\n","\n","# Group by user, month and plan, and count the number of messages\n","total_messages = (messages.merge(users, on='user_id', how='left')\n","                  .groupby(['user_id', 'month', 'plan'])['id']\n","                  .count()\n","                  .reset_index()\n","                  .rename(columns={'id': 'total_messages'}))\n","\n","# Plot a histogram\n","plt.figure(figsize=(12, 7))\n","for plan, color in [('surf', 'green'), ('ultimate', 'purple')]:\n","    sns.histplot(total_messages[total_messages['plan'] == plan]['total_messages'], kde=True, label=plan, bins=30, alpha=0.5, color=color)\n","\n","plt.title('Distribution of the total number of messages by plan')\n","plt.xlabel('Total Number of Messages')\n","plt.ylabel('Number of users')\n","plt.legend(title='Plan')\n","plt.show()\n"]},{"cell_type":"markdown","id":"f553eb89","metadata":{"papermill":{"duration":0.033143,"end_time":"2023-11-11T03:54:46.067288","exception":false,"start_time":"2023-11-11T03:54:46.034145","status":"completed"},"tags":[]},"source":["The histogram shows the distribution of the total number of messages sent by users of the \"surf\" and \"ultimate\" plans each month.\n","\n","Most users of both plans tend to send less than 100 messages per month.\n","Users on the \"surf\" plan have a higher concentration around the 0-20 message mark, while those on the \"ultimate\" plan seem to be a little more distributed, although they also have a high concentration in the lower range."]},{"cell_type":"code","execution_count":30,"id":"b79539f4","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:46.135812Z","iopub.status.busy":"2023-11-11T03:54:46.135396Z","iopub.status.idle":"2023-11-11T03:54:46.148968Z","shell.execute_reply":"2023-11-11T03:54:46.14767Z"},"papermill":{"duration":0.050829,"end_time":"2023-11-11T03:54:46.15116","exception":false,"start_time":"2023-11-11T03:54:46.100331","status":"completed"},"scrolled":true,"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>plan</th>\n","      <th>mean</th>\n","      <th>var</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>surf</td>\n","      <td>40.109656</td>\n","      <td>1091.344231</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ultimate</td>\n","      <td>46.296233</td>\n","      <td>1085.183108</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       plan       mean          var\n","0      surf  40.109656  1091.344231\n","1  ultimate  46.296233  1085.183108"]},"metadata":{},"output_type":"display_data"}],"source":["# Calculate the mean and variance of messages sent monthly by plan\n","message_stats = total_messages.groupby('plan')['total_messages'].agg(['mean', 'var']).reset_index()\n","\n","display(message_stats)\n"]},{"cell_type":"markdown","id":"4129b0b3","metadata":{"papermill":{"duration":0.033976,"end_time":"2023-11-11T03:54:46.21879","exception":false,"start_time":"2023-11-11T03:54:46.184814","status":"completed"},"tags":[]},"source":["Here are the statistics for the number of messages sent monthly by users of different plans:\n","\n","Surf Plan:\n","+ Average: Approximately 40 messages per month.\n","+ Variance: Approximately 1091.\n","\n","Ultimate Plan:\n","+ Average: Approximately 46 messages per month.\n","+ Variance: Approximately 1085.\n","\n","This indicates that, on average, users on the \"ultimate\" plan send slightly more messages than those on the \"surf\" plan. However, the variance in both plans is similar, suggesting that the dispersion of the number of messages sent by users is comparable in both plans."]},{"cell_type":"code","execution_count":31,"id":"22499bdb","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:46.289146Z","iopub.status.busy":"2023-11-11T03:54:46.288341Z","iopub.status.idle":"2023-11-11T03:54:46.566607Z","shell.execute_reply":"2023-11-11T03:54:46.564994Z"},"papermill":{"duration":0.316941,"end_time":"2023-11-11T03:54:46.569383","exception":false,"start_time":"2023-11-11T03:54:46.252442","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1000x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Plot a boxplot to visualize the distribution of messages sent by month.\n","plt.figure(figsize=(10, 6))\n","sns.boxplot(data=total_messages, x='plan', y='total_messages', palette='pastel')\n","plt.title('Distribution of messages sent per month by plan')\n","plt.xlabel('Plan')\n","plt.ylabel('Total Number of Messages')\n","plt.show()\n"]},{"cell_type":"markdown","id":"425def47","metadata":{"papermill":{"duration":0.034178,"end_time":"2023-11-11T03:54:46.639114","exception":false,"start_time":"2023-11-11T03:54:46.604936","status":"completed"},"tags":[]},"source":["The box plot shows the distribution of the total number of messages sent by users of the \"surf\" and \"ultimate\" plans each month.\n","\n","+ Users on the \"surf\" plan have a lower median compared to those on the \"ultimate\" plan when it comes to messages sent.\n","+ The interquartile range (IQR) for both plans is similar, indicating that the dispersion in the number of messages sent is comparable between the two plans.\n","+ There are some outliers on both plans, especially on the \"surf\" plan, where some users send significantly more messages than the average user."]},{"cell_type":"markdown","id":"4d1a9be3","metadata":{"papermill":{"duration":0.035081,"end_time":"2023-11-11T03:54:46.711646","exception":false,"start_time":"2023-11-11T03:54:46.676565","status":"completed"},"tags":[]},"source":["### Internet"]},{"cell_type":"code","execution_count":32,"id":"3b973397","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:46.785124Z","iopub.status.busy":"2023-11-11T03:54:46.783922Z","iopub.status.idle":"2023-11-11T03:54:47.646713Z","shell.execute_reply":"2023-11-11T03:54:47.645366Z"},"papermill":{"duration":0.902427,"end_time":"2023-11-11T03:54:47.649507","exception":false,"start_time":"2023-11-11T03:54:46.74708","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1200x700 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Will buy the number of data that users of each plan tend to use each month\n","# Convert the session_date column to datetime format\n","internet['session_date'] = pd.to_datetime(internet['session_date'])\n","\n","# Extract the month from the session_date column\n","internet['month'] = internet['session_date'].dt.month\n","\n","# Group by user, month, and plan, and sum the amount of data used\n","total_data_used = (internet.merge(users, on='user_id', how='left')\n","                   .groupby(['user_id', 'month', 'plan'])['mb_used']\n","                   .sum()\n","                   .reset_index()\n","                   .rename(columns={'mb_used': 'total_mb_used'}))\n","\n","# Plot a histogram to visualize the distribution of data used per month by plan\n","plt.figure(figsize=(12, 7))\n","for plan, color in [('surf', 'blue'), ('ultimate', 'red')]:\n","    sns.histplot(total_data_used[total_data_used['plan'] == plan]['total_mb_used'], kde=True, label=plan, bins=30, alpha=0.5, color=color)\n","\n","plt.title('Distribution of the amount of data used per month by plan')\n","plt.xlabel('Amount of Data Used (MB)')\n","plt.ylabel('Number of users')\n","plt.legend(title='Plan')\n","plt.show()\n"]},{"cell_type":"markdown","id":"638c3167","metadata":{"papermill":{"duration":0.035771,"end_time":"2023-11-11T03:54:47.721566","exception":false,"start_time":"2023-11-11T03:54:47.685795","status":"completed"},"tags":[]},"source":["The histogram shows the distribution of the amount of data used by users of the \"surf\" and \"ultimate\" plans each month.\n","\n","+ Most users of both plans tend to consume between 0 and 20000 MB (20 GB) per month.\n","+ \"Surf\" plan users show a higher concentration around the 15000-20000 MB range, while \"ultimate\" plan users have a slightly wider distribution.\n","+ It can be seen that there are users, especially on the \"surf\" plan, who are close to or exceed the 30 GB limit."]},{"cell_type":"code","execution_count":33,"id":"f74d617b","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:47.796445Z","iopub.status.busy":"2023-11-11T03:54:47.795721Z","iopub.status.idle":"2023-11-11T03:54:47.811772Z","shell.execute_reply":"2023-11-11T03:54:47.810489Z"},"papermill":{"duration":0.056681,"end_time":"2023-11-11T03:54:47.814788","exception":false,"start_time":"2023-11-11T03:54:47.758107","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>plan</th>\n","      <th>mean</th>\n","      <th>var</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>surf</td>\n","      <td>16717.702137</td>\n","      <td>6.216823e+07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ultimate</td>\n","      <td>17238.642253</td>\n","      <td>6.132485e+07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       plan          mean           var\n","0      surf  16717.702137  6.216823e+07\n","1  ultimate  17238.642253  6.132485e+07"]},"execution_count":33,"metadata":{},"output_type":"execute_result"}],"source":["# Calculates the mean and variance of the monthly internet duration.\n","data_stats = total_data_used.groupby('plan')['total_mb_used'].agg(['mean', 'var']).reset_index()\n","\n","data_stats\n"]},{"cell_type":"markdown","id":"4f20eba3","metadata":{"papermill":{"duration":0.035948,"end_time":"2023-11-11T03:54:47.887316","exception":false,"start_time":"2023-11-11T03:54:47.851368","status":"completed"},"tags":[]},"source":["This indicates that, on average, users on the \"ultimate\" plan consume slightly more data than those on the \"surf\" plan. However, the variance in both plans is similar, suggesting that the dispersion of data use is comparable in both plans."]},{"cell_type":"code","execution_count":34,"id":"b39d1761","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:47.966329Z","iopub.status.busy":"2023-11-11T03:54:47.965557Z","iopub.status.idle":"2023-11-11T03:54:48.278451Z","shell.execute_reply":"2023-11-11T03:54:48.277236Z"},"papermill":{"duration":0.35688,"end_time":"2023-11-11T03:54:48.281186","exception":false,"start_time":"2023-11-11T03:54:47.924306","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1000x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Plot a boxplot to visualize the distribution of monthly internet duration.\n","plt.figure(figsize=(10, 6))\n","sns.boxplot(data=total_data_used, x='plan', y='total_mb_used', palette='pastel')\n","plt.title('Distribution of the amount of data used per month by plan')\n","plt.xlabel('Plan')\n","plt.ylabel('Amount of Data Used (MB)')\n","plt.show()\n"]},{"cell_type":"markdown","id":"8c275459","metadata":{"papermill":{"duration":0.035682,"end_time":"2023-11-11T03:54:48.353275","exception":false,"start_time":"2023-11-11T03:54:48.317593","status":"completed"},"tags":[]},"source":["The box plot shows the distribution of the amount of data used by users of the \"surf\" and \"ultimate\" plans each month.\n","\n","+ Median data usage for both plans is similar, although the \"ultimate\" plan has a slightly higher median.\n","+ The interquartile range (IQR) for both plans is comparable, indicating that the dispersion of data usage is similar between the two plans.\n","+ There are some outliers on both plans, especially on the \"surf\" plan, where some users exceed the average data usage."]},{"cell_type":"markdown","id":"d85f2876","metadata":{"papermill":{"duration":0.035708,"end_time":"2023-11-11T03:54:48.425042","exception":false,"start_time":"2023-11-11T03:54:48.389334","status":"completed"},"tags":[]},"source":["Based on the analysis and visualizations we have made of internet traffic, we reach the following conclusions:\n","\n","1. **Amount of Data Used**:\n","     - Most users of both plans tend to consume between 0 and 20 GB per month.\n","     - \"Surf\" plan users show a higher concentration around the 15-20 GB range, while \"ultimate\" plan users have a slightly wider distribution.\n","     - It is notable that there are users, especially on the \"surf\" plan, who are approaching or exceeding the 30 GB limit, which could indicate that some users on this plan could benefit from switching to the \"ultimate\" plan to avoid additional charges.\n","\n","2. **Comparison of Plans**:\n","     - On average, users on the \"ultimate\" plan consume slightly more data than those on the \"surf\" plan (17.2 GB vs. 16.7 GB, respectively).\n","     - The variance in both plans is similar, suggesting that the dispersion of data use is comparable in both plans.\n","     - The interquartile range (IQR) for data usage in both plans is similar, indicating a similar dispersion in data usage between the two plans.\n","\n","3. **Outlier Values**:\n","     - There are outliers present in both plans. On the \"surf\" plan, some users exceed average data usage. This may be due to different consumption patterns or specific needs of those users.\n","\n","4. **General Conclusion**:\n","     - Although there are minor differences in average data usage between the two plans, overall user behavior in terms of data consumption is quite similar between the \"surf\" and \"ultimate\" plans.\n","     - Surf plan users who regularly approach or exceed their data limit might consider switching to the ultimate plan for better value.\n","\n","Based on this analysis, we can say that while there are some differences in data usage between the two plans, the overall behavior is similar. The choice between \"surf\" and \"ultimate\" could depend more on the individual needs of users and how they value the different components of each plan (for example, message limits, calling minutes, etc.) than on data consumption per se."]},{"cell_type":"markdown","id":"3288512a","metadata":{"papermill":{"duration":0.035676,"end_time":"2023-11-11T03:54:48.498526","exception":false,"start_time":"2023-11-11T03:54:48.46285","status":"completed"},"tags":[]},"source":["## Income"]},{"cell_type":"code","execution_count":35,"id":"479e030d","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:48.572339Z","iopub.status.busy":"2023-11-11T03:54:48.571929Z","iopub.status.idle":"2023-11-11T03:54:52.523708Z","shell.execute_reply":"2023-11-11T03:54:52.522316Z"},"papermill":{"duration":3.991732,"end_time":"2023-11-11T03:54:52.526139","exception":false,"start_time":"2023-11-11T03:54:48.534407","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>month</th>\n","      <th>duration</th>\n","      <th>first_name</th>\n","      <th>last_name</th>\n","      <th>age</th>\n","      <th>city</th>\n","      <th>reg_date</th>\n","      <th>plan</th>\n","      <th>churn_date</th>\n","      <th>extra_minutes</th>\n","      <th>call_income</th>\n","      <th>message_income</th>\n","      <th>total_messages</th>\n","      <th>internet_income</th>\n","      <th>mb_used</th>\n","      <th>total_income</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1000</td>\n","      <td>12</td>\n","      <td>116.83</td>\n","      <td>Anamaria</td>\n","      <td>Bauer</td>\n","      <td>45.0</td>\n","      <td>Atlanta-Sandy Springs-Roswell, GA MSA</td>\n","      <td>2018-12-24 00:00:00</td>\n","      <td>ultimate</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>11.0</td>\n","      <td>0.0</td>\n","      <td>1901.47</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1001</td>\n","      <td>8</td>\n","      <td>171.14</td>\n","      <td>Mickey</td>\n","      <td>Wilkerson</td>\n","      <td>28.0</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-08-13 00:00:00</td>\n","      <td>surf</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>30.0</td>\n","      <td>0.0</td>\n","      <td>6919.15</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1001</td>\n","      <td>9</td>\n","      <td>297.69</td>\n","      <td>Mickey</td>\n","      <td>Wilkerson</td>\n","      <td>28.0</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-08-13 00:00:00</td>\n","      <td>surf</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>44.0</td>\n","      <td>0.0</td>\n","      <td>13314.82</td>\n","      <td>0.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1001</td>\n","      <td>10</td>\n","      <td>374.11</td>\n","      <td>Mickey</td>\n","      <td>Wilkerson</td>\n","      <td>28.0</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-08-13 00:00:00</td>\n","      <td>surf</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.09</td>\n","      <td>53.0</td>\n","      <td>70.0</td>\n","      <td>22330.49</td>\n","      <td>70.09</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1001</td>\n","      <td>11</td>\n","      <td>404.59</td>\n","      <td>Mickey</td>\n","      <td>Wilkerson</td>\n","      <td>28.0</td>\n","      <td>Seattle-Tacoma-Bellevue, WA MSA</td>\n","      <td>2018-08-13 00:00:00</td>\n","      <td>surf</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>36.0</td>\n","      <td>40.0</td>\n","      <td>18504.30</td>\n","      <td>40.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  month  duration first_name  last_name   age  \\\n","0     1000     12    116.83   Anamaria      Bauer  45.0   \n","1     1001      8    171.14     Mickey  Wilkerson  28.0   \n","2     1001      9    297.69     Mickey  Wilkerson  28.0   \n","3     1001     10    374.11     Mickey  Wilkerson  28.0   \n","4     1001     11    404.59     Mickey  Wilkerson  28.0   \n","\n","                                    city             reg_date      plan  \\\n","0  Atlanta-Sandy Springs-Roswell, GA MSA  2018-12-24 00:00:00  ultimate   \n","1        Seattle-Tacoma-Bellevue, WA MSA  2018-08-13 00:00:00      surf   \n","2        Seattle-Tacoma-Bellevue, WA MSA  2018-08-13 00:00:00      surf   \n","3        Seattle-Tacoma-Bellevue, WA MSA  2018-08-13 00:00:00      surf   \n","4        Seattle-Tacoma-Bellevue, WA MSA  2018-08-13 00:00:00      surf   \n","\n","  churn_date  extra_minutes  call_income  message_income  total_messages  \\\n","0          0            0.0          0.0            0.00            11.0   \n","1          0            0.0          0.0            0.00            30.0   \n","2          0            0.0          0.0            0.00            44.0   \n","3          0            0.0          0.0            0.09            53.0   \n","4          0            0.0          0.0            0.00            36.0   \n","\n","   internet_income   mb_used  total_income  \n","0              0.0   1901.47          0.00  \n","1              0.0   6919.15          0.00  \n","2              0.0  13314.82          0.00  \n","3             70.0  22330.49         70.09  \n","4             40.0  18504.30         40.00  "]},"metadata":{},"output_type":"display_data"},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Surf</th>\n","      <th>Ultimate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1545.000000</td>\n","      <td>713.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>39.739583</td>\n","      <td>2.277700</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>53.396963</td>\n","      <td>11.351942</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>20.330000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>60.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>568.637200</td>\n","      <td>112.000000</td>\n","    </tr>\n","    <tr>\n","      <th>variance</th>\n","      <td>2851.235617</td>\n","      <td>128.866595</td>\n","    </tr>\n","    <tr>\n","      <th>IQR</th>\n","      <td>60.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 Surf    Ultimate\n","count     1545.000000  713.000000\n","mean        39.739583    2.277700\n","std         53.396963   11.351942\n","min          0.000000    0.000000\n","25%          0.000000    0.000000\n","50%         20.330000    0.000000\n","75%         60.000000    0.000000\n","max        568.637200  112.000000\n","variance  2851.235617  128.866595\n","IQR         60.000000    0.000000"]},"metadata":{},"output_type":"display_data"}],"source":["# 1. Calculation of income from calls, messages and internet:\n","\n","# Calculate monthly income from calls\n","monthly_calls = calls.groupby(['user_id', 'month'])['duration'].sum().reset_index()\n","monthly_calls = monthly_calls.merge(users, on='user_id', how='left')\n","monthly_calls['extra_minutes'] = monthly_calls.apply(\n","    lambda row: max(0, row['duration'] - plans.loc[plans['plan_name'] == row['plan'], 'minutes_included'].values[0]), axis=1)\n","monthly_calls['call_income'] = monthly_calls.apply(\n","    lambda row: row['extra_minutes'] * plans.loc[plans['plan_name'] == row['plan'], 'usd_per_minute'].values[0], axis=1)\n","\n","# Calculate monthly income per messages\n","monthly_messages = messages.groupby(['user_id', 'month'])['id'].count().reset_index().rename(columns={'id': 'total_messages'})\n","monthly_messages = monthly_messages.merge(users, on='user_id', how='left')\n","monthly_messages['extra_messages'] = monthly_messages.apply(\n","    lambda row: max(0, row['total_messages'] - plans.loc[plans['plan_name'] == row['plan'], 'messages_included'].values[0]), axis=1)\n","monthly_messages['message_income'] = monthly_messages.apply(\n","    lambda row: row['extra_messages'] * plans.loc[plans['plan_name'] == row['plan'], 'usd_per_message'].values[0], axis=1)\n","\n","# Calculate monthly income online\n","monthly_internet = internet.groupby(['user_id', 'month'])['mb_used'].sum().reset_index()\n","monthly_internet = monthly_internet.merge(users, on='user_id', how='left')\n","monthly_internet['extra_mb'] = monthly_internet.apply(\n","    lambda row: max(0, row['mb_used'] - plans.loc[plans['plan_name'] == row['plan'], 'mb_per_month_included'].values[0]), axis=1)\n","\n","#2. Consolidation of income and calculation of total income:\n","\n","# Calculate revenue per extra MB used\n","monthly_internet['internet_income'] = monthly_internet.apply(\n","    lambda row: np.ceil(row['extra_mb'] / 1024) * plans.loc[plans['plan_name'] == row['plan'], 'usd_per_gb'].values[0], axis=1)\n","\n","# Merge the dataframes to create the monthly_income dataframe\n","monthly_income = monthly_calls.merge(monthly_messages[['user_id', 'month', 'message_income', 'total_messages']], \n","                                     on=['user_id', 'month'], how='outer')\n","monthly_income = monthly_income.merge(monthly_internet[['user_id', 'month', 'internet_income', 'mb_used']], \n","                                     on=['user_id', 'month'], how='outer')\n","monthly_income = monthly_income.fillna(0)\n","\n","# Calculate total monthly income for each user\n","monthly_income['total_income'] = monthly_income['call_income'] + monthly_income['message_income'] + monthly_income['internet_income']\n","\n","#3. Visualization and descriptive statistics of income:\n","\n","# Show the first rows of consolidated income data\n","consolidated_income_sample = monthly_income.head()\n","\n","# Calculate descriptive statistics for monthly income for both plans\n","income_stats_surf = monthly_income[monthly_income['plan'] == 'surf']['total_income'].describe()\n","income_stats_ultimate = monthly_income[monthly_income['plan'] == 'ultimate']['total_income'].describe()\n","\n","# Calculate variance and IQR for both plans\n","income_stats_surf['variance'] = monthly_income[monthly_income['plan'] == 'surf']['total_income'].var()\n","income_stats_surf['IQR'] = income_stats_surf['75%'] - income_stats_surf['25%']\n","income_stats_ultimate['variance'] = monthly_income[monthly_income['plan'] == 'ultimate']['total_income'].var()\n","income_stats_ultimate['IQR'] = income_stats_ultimate['75%'] - income_stats_ultimate['25%']\n","\n","income_stats = pd.DataFrame({'Surf': income_stats_surf, 'Ultimate': income_stats_ultimate})\n","\n","display(consolidated_income_sample)\n","display(income_stats)\n"]},{"cell_type":"markdown","id":"3f0fd824","metadata":{"papermill":{"duration":0.037462,"end_time":"2023-11-11T03:54:52.60095","exception":false,"start_time":"2023-11-11T03:54:52.563488","status":"completed"},"tags":[]},"source":["Conclusions\n","1. **Income per Plan**:\n","    - The **Surf** plan tends to generate more additional income than the **Ultimate** plan. Surf plan users, on average, tend to exceed their limits more often, resulting in additional charges.\n","    - On the other hand, most users of the **Ultimate** plan stay within their limits. This is reflected in the median and quartiles that are at $0.00, indicating that many of these users do not incur additional costs.\n","\n","2. **Users with Cost $0.00**:\n","\n","    - Rows with a revenue of $0.00 may indicate users who did not exceed any of their limits during a particular month or users who did not use the service at all in that month.\n","    - It is also possible that due to data merging, some users did not have activity in certain months, but are still reflected in the consolidated data.\n","\n","3. **Income Distribution**:\n","    - The income distribution of the Surf plan is wider compared to the Ultimate plan. While the Ultimate plan has a higher concentration of users with no additional charges, the Surf plan has a more varied distribution, with users incurring different amounts of additional charges.\n","  \n","4. **User Activity**:\n","    - It is important to observe and consider user activity when interpreting income. An inactive user (no calls, messages, or data usage in a month) should not be interpreted as a satisfied customer who is simply staying within their limits. It could indicate a user who does not find value in the service or is having technical problems.\n","\n","5. **Recommendations for the Company**:\n","    - It might be beneficial to investigate why certain Surf plan users regularly exceed their limits. If these users are consistently incurring additional charges, they might be more willing to upgrade to the Ultimate plan.\n","    - For inactive users, the company could consider conducting surveys or reaching out to these customers to better understand their needs and improve customer retention.\n","\n"]},{"cell_type":"markdown","id":"0bcdffb4","metadata":{"papermill":{"duration":0.036575,"end_time":"2023-11-11T03:54:52.675415","exception":false,"start_time":"2023-11-11T03:54:52.63884","status":"completed"},"tags":[]},"source":[" "]},{"cell_type":"markdown","id":"175737fd","metadata":{"papermill":{"duration":0.039982,"end_time":"2023-11-11T03:54:52.75502","exception":false,"start_time":"2023-11-11T03:54:52.715038","status":"completed"},"tags":[]},"source":["## Test statistical hypotheses"]},{"cell_type":"markdown","id":"abb85274","metadata":{"papermill":{"duration":0.038163,"end_time":"2023-11-11T03:54:52.832074","exception":false,"start_time":"2023-11-11T03:54:52.793911","status":"completed"},"tags":[]},"source":["### 1. Difference in the average income of users of the Ultimate and Surf plans.\n","\n","- **Null Hypothesis (\\(H_0\\))**: The average income of the users of the Ultimate plan is equal to the average income of the users of the Surf plan.\n","  \n","- **Alternate Hypothesis (\\(H_a\\))**: The average income of the users of the Ultimate plan is different from the average income of the users of the Surf plan.\n","\n","\n","  "]},{"cell_type":"code","execution_count":36,"id":"a29ace2a","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:52.909351Z","iopub.status.busy":"2023-11-11T03:54:52.908583Z","iopub.status.idle":"2023-11-11T03:54:55.524677Z","shell.execute_reply":"2023-11-11T03:54:55.523415Z"},"papermill":{"duration":2.65852,"end_time":"2023-11-11T03:54:55.527755","exception":false,"start_time":"2023-11-11T03:54:52.869235","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["1.5752305836840926e-71"]},"execution_count":36,"metadata":{},"output_type":"execute_result"}],"source":["# Test the hypotheses\n","# Extracting month information from message_date and session_date\n","messages['month'] = pd.to_datetime(messages['message_date']).dt.month\n","internet['month'] = pd.to_datetime(internet['session_date']).dt.month\n","\n","# Recalculate monthly message revenue\n","monthly_messages = messages.groupby(['user_id', 'month'])['id'].count().reset_index().rename(columns={'id': 'total_messages'})\n","monthly_messages = monthly_messages.merge(users, on='user_id', how='left')\n","monthly_messages['extra_messages'] = monthly_messages.apply(\n","    lambda row: max(0, row['total_messages'] - plans.loc[plans['plan_name'] == row['plan'], 'messages_included'].values[0]), axis=1)\n","monthly_messages['message_income'] = monthly_messages.apply(\n","    lambda row: row['extra_messages'] * plans.loc[plans['plan_name'] == row['plan'], 'usd_per_message'].values[0], axis=1)\n","\n","# Recalculate monthly Internet income\n","monthly_internet = internet.groupby(['user_id', 'month'])['mb_used'].sum().reset_index()\n","monthly_internet = monthly_internet.merge(users, on='user_id', how='left')\n","monthly_internet['extra_mb'] = monthly_internet.apply(\n","    lambda row: max(0, row['mb_used'] - plans.loc[plans['plan_name'] == row['plan'], 'mb_per_month_included'].values[0]), axis=1)\n","monthly_internet['internet_income'] = monthly_internet.apply(\n","    lambda row: np.ceil(row['extra_mb'] / 1024) * plans.loc[plans['plan_name'] == row['plan'], 'usd_per_gb'].values[0], axis=1)\n","\n","# Merge the data frames to create the monthly_income data frame\n","monthly_income = monthly_calls.merge(monthly_messages[['user_id', 'month', 'message_income']], on=['user_id', 'month'], how='outer')\n","monthly_income = monthly_income.merge(monthly_internet[['user_id', 'month', 'internet_income']], on=['user_id', 'month'], how='outer')\n","monthly_income = monthly_income.fillna(0)\n","\n","# Calculate the total monthly income of each user\n","monthly_income['total_income'] = monthly_income['call_income'] + monthly_income['message_income'] + monthly_income['internet_income']\n","\n","# Perform two-sample t-test\n","surf_income = monthly_income[monthly_income['plan'] == 'surf']['total_income']\n","ultimate_income = monthly_income[monthly_income['plan'] == 'ultimate']['total_income']\n","\n","t_stat_1, p_value_1 = stats.ttest_ind(surf_income, ultimate_income)\n","p_value_1\n"]},{"cell_type":"markdown","id":"8fe805d8","metadata":{"papermill":{"duration":0.036835,"end_time":"2023-11-11T03:54:55.602024","exception":false,"start_time":"2023-11-11T03:54:55.565189","status":"completed"},"tags":[]},"source":["The p-value obtained for the two-sample t-test between the income of users of the \"Surf\" and \"Ultimate\" plans is approximately \\(1.575 \\times 10^{-71}\\), which is extremely close to zero .\n","\n","Given a commonly used significance level of \\(\\alpha = 0.05\\), we can reject the null hypothesis and conclude that there is a significant difference in the average income of users of the \"Ultimate\" and \"Surf\" plans.\n","\n","Conclusion:\n","The average income of users of the \"Ultimate\" plan is different from the average income of users of the \"Surf\" plan."]},{"cell_type":"markdown","id":"5093b1df","metadata":{"papermill":{"duration":0.036354,"end_time":"2023-11-11T03:54:55.675465","exception":false,"start_time":"2023-11-11T03:54:55.639111","status":"completed"},"tags":[]},"source":["### 2. Difference in the average income of users in the NY-NJ area compared to other regions.\n","\n","- **Null Hypothesis (\\(H_0\\))**: The average income of users in the NY-NJ area is equal to the average income of users in other regions.\n","  \n","- **Alternate Hypothesis (\\(H_a\\))**: The average income of users in the NY-NJ area is different from the average income of users in other regions."]},{"cell_type":"code","execution_count":37,"id":"01be10cc","metadata":{"execution":{"iopub.execute_input":"2023-11-11T03:54:55.752618Z","iopub.status.busy":"2023-11-11T03:54:55.752216Z","iopub.status.idle":"2023-11-11T03:54:55.779607Z","shell.execute_reply":"2023-11-11T03:54:55.778638Z"},"papermill":{"duration":0.068334,"end_time":"2023-11-11T03:54:55.781871","exception":false,"start_time":"2023-11-11T03:54:55.713537","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["0.5149694787233987"]},"execution_count":37,"metadata":{},"output_type":"execute_result"}],"source":["# Test the hypotheses\n","# Separate the data into two groups: users from the NY-NJ area and users from other regions\n","ny_nj_income = monthly_income[monthly_income['city'].str.contains(\"NY-NJ\", case=False, na=False)]['total_income']\n","other_regions_income = monthly_income[~monthly_income['city'].str.contains(\"NY-NJ\", case=False, na=False)]['total_income']\n","\n","# Perform two-sample t-test\n","t_stat_2, p_value_2 = stats.ttest_ind(ny_nj_income, other_regions_income)\n","p_value_2\n"]},{"cell_type":"markdown","id":"f008cdc3","metadata":{"papermill":{"duration":0.037171,"end_time":"2023-11-11T03:54:55.856443","exception":false,"start_time":"2023-11-11T03:54:55.819272","status":"completed"},"tags":[]},"source":["The p-value obtained for the two-sample t-test between the income of users in the NY-NJ area and users in other regions is approximately \\(0.515\\).\n","\n","Given a significance level of \\(\\alpha = 0.05\\), we cannot reject the null hypothesis. This implies that there is not enough evidence to affirm that there is a significant difference in the average income of users in the NY-NJ area compared to users in other regions.\n","\n","Conclusion:\n","The average income of users in the NY-NJ area is not significantly different from the average income of users in other regions."]},{"cell_type":"markdown","id":"8f504859","metadata":{"papermill":{"duration":0.037036,"end_time":"2023-11-11T03:54:55.931082","exception":false,"start_time":"2023-11-11T03:54:55.894046","status":"completed"},"tags":[]},"source":["## General conclusion"]},{"cell_type":"markdown","id":"b4db34e8","metadata":{"papermill":{"duration":0.037943,"end_time":"2023-11-11T03:54:56.006127","exception":false,"start_time":"2023-11-11T03:54:55.968184","status":"completed"},"tags":[]},"source":["The project was carried out in several stages, I would classify these stages in the following sections, which is the summary of everything that was carried out during the analysis:\n","\n","1. **Data Preprocessing**:\n","    - During preprocessing, we noticed that there were calls with zero duration, which can be interpreted as missed or unanswered calls. These were retained in the data set as they represent a significant part of it.\n","    - Null data in the `churn_date` column of the `users` dataframe indicates that the user was still active at the end of the observed period. It was not considered necessary to modify these null values as they have a specific meaning in this context.\n","\n","2. **Exploratory Analysis**:\n","    - Through histograms and box plots, we were able to visualize the distribution of the number of calls, messages, and Internet data usage of users for each month.\n","    - We observe that most users do not exceed the limit of minutes, messages or Internet data included in their plans. However, those that do, especially in the Surf plan, can generate significant additional revenue for the company.\n","\n","3. **Income**:\n","    - The total monthly income per user was calculated, considering both the fixed cost of the plan and additional charges for exceeding the limits of calls, messages and Internet data.\n","    - Through descriptive statistics, we found that the variability in income is greater in the Surf plan than in the Ultimate plan. This is reflected in a higher variance and IQR for the Surf plan compared to the Ultimate plan.\n","\n","4. **Hypothesis Testing**:\n","    - Hypothesis tests revealed that there is a significant difference in average income between users of the Surf and Ultimate plans.\n","    - However, we did not find sufficient evidence to claim that there is a difference in the average income of users in the NY-NJ area compared to other regions.\n","\n","5. **Decisions and Assumptions**:\n","    - Some of the important decisions made during the analysis include how to handle null and zero values, and choosing specific visualizations to represent the distribution of the variables.\n","    - Key assumptions include how to interpret specific values, such as zero call duration, and how null values in `churn_date` indicate active users.\n","\n","Final conclusion:\n","The analysis provided a clear view of how users of different plans consume services and how this translates into revenue for the company. The information derived from this analysis can be valuable to the company when making decisions about pricing structure, promotional offers, or marketing strategies targeting different user segments."]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":3931883,"sourceId":6839251,"sourceType":"datasetVersion"}],"dockerImageVersionId":30558,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":26.785234,"end_time":"2023-11-11T03:54:56.66475","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2023-11-11T03:54:29.879516","version":"2.4.0"}},"nbformat":4,"nbformat_minor":5}